# Github action to build Docker image from main branch

name: Build Container

on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  bulid:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout (main)
        uses: actions/checkout@v4
        with:
          repository: 'dontobi/motioneye.rpi'
          ref: 'main'

      - name: Get and write version
        id: version
        run: |
          VERSION="$(cat .github/parameters/.version)"
          DATI="$(date --rfc-3339=seconds | sed 's/ /T/')"
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "dati=$DATI" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Login to DockerHub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: dontobi
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Load Docker image for testing
        id: build_and_load
        uses: docker/build-push-action@v6.16.0
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          platforms: linux/arm64
          build-args: |
            VERSION=${{ env.version }}
            DATI=${{ env.dati }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/dontobi/motioneye.rpi:${{ env.version }}

      - name: Test Docker Container
        run: |
          IMAGE_TO_TEST="ghcr.io/dontobi/motioneye.rpi:${{ env.version }}"
          CONTAINER_NAME="test-motioneye"
          echo "Attempting to run container $CONTAINER_NAME from image $IMAGE_TO_TEST"
          docker run \
            -p 8765:8765 \
            -e TZ="Europe/Berlin" \
            -v motioneye-config:/etc/motioneye \
            -v motioneye-data:/var/lib/motioneye \
            -v /etc/localtime:/etc/localtime:ro \
            -v /etc/timezone:/etc/timezone:ro \
            -e UID=1000 \
            -e GID=1000 \
            -d --name $CONTAINER_NAME \
            $IMAGE_TO_TEST
          
          echo "Waiting for container to initialize..."
          sleep 15
          
          if ! docker ps -f name=$CONTAINER_NAME | grep -q $CONTAINER_NAME; then
            echo "Error: Container $CONTAINER_NAME failed to stay running."
            echo "--- Container Logs ---"
            docker logs $CONTAINER_NAME || echo "Could not retrieve logs for $CONTAINER_NAME."
            docker rm $CONTAINER_NAME || echo "Could not remove $CONTAINER_NAME."
            exit 1
          fi
          
          echo "Container $CONTAINER_NAME is running. Checking logs for startup message..."
          if ! docker logs $CONTAINER_NAME 2>&1 | grep -q "server started"; then
            echo "Error: Startup message 'server started' not found in logs for $CONTAINER_NAME."
            echo "--- Container Logs ---"
            docker logs $CONTAINER_NAME
            docker stop $CONTAINER_NAME
            docker rm $CONTAINER_NAME
            exit 1
          fi
          
          echo "Container test successful: $CONTAINER_NAME started and startup message found."
          docker stop $CONTAINER_NAME
          docker rm $CONTAINER_NAME

      - name: Build and Push Multi-Platform Docker image
        if: success()
        uses: docker/build-push-action@v6.16.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm/v7,linux/arm64
          build-args: |
            VERSION=${{ env.version }}
            DATI=${{ env.dati }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            dontobi/motioneye.rpi:${{ env.version }},
            dontobi/motioneye.rpi:latest,
            ghcr.io/dontobi/motioneye.rpi:${{ env.version }},
            ghcr.io/dontobi/motioneye.rpi:latest
